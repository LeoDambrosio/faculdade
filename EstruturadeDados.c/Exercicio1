#include <stdio.h>
#include <string.h>

#define TAM_FILA 10

typedef struct {
    char nome[30];
    int senha;
} Pessoa;

typedef struct {
    Pessoa fila[TAM_FILA];
    int inicio, fim, total;
} FilaBanco;

void inicializarFila(FilaBanco *f) {
    f->inicio = 0;
    f->fim = 0;
    f->total = 0;
}

int filaVazia(FilaBanco *f) {
    return f->total == 0;
}

int filaCheia(FilaBanco *f) {
    return f->total == TAM_FILA;
}

void adicionarPessoa(FilaBanco *f) {
    if (filaCheia(f)) {
        printf("Fila cheia. Não é possível adicionar mais pessoas.\n");
        return;
    }
    Pessoa nova;
    printf("Nome: ");
    scanf(" %[^\n]", nova.nome);
    printf("Senha numérica: ");
    scanf("%d", &nova.senha);

    f->fila[f->fim] = nova;
    f->fim = (f->fim + 1) % TAM_FILA;
    f->total++;
}

void atenderPessoa(FilaBanco *f) {
    if (filaVazia(f)) {
        printf("Fila vazia. Nenhuma pessoa para atender.\n");
        return;
    }
    Pessoa atendida = f->fila[f->inicio];
    printf("Atendendo: %s (Senha: %d)\n", atendida.nome, atendida.senha);
    f->inicio = (f->inicio + 1) % TAM_FILA;
    f->total--;
}

void mostrarFila(FilaBanco *f) {
    if (filaVazia(f)) {
        printf("Fila vazia.\n");
        return;
    }
    printf("Fila atual:\n");
    int i, pos = f->inicio;
    for (i = 0; i < f->total; i++) {
        printf("%d. %s (Senha: %d)\n", i+1, f->fila[pos].nome, f->fila[pos].senha);
        pos = (pos + 1) % TAM_FILA;
    }
}

int main() {
    FilaBanco fila;
    inicializarFila(&fila);
    int op;

    do {
        printf("\n1. Adicionar Pessoa\n2. Atender Pessoa\n3. Mostrar Fila\n4. Sair\nEscolha: ");
        scanf("%d", &op);
        switch(op) {
            case 1: adicionarPessoa(&fila); break;
            case 2: atenderPessoa(&fila); break;
            case 3: mostrarFila(&fila); break;
            case 4: printf("Saindo...\n"); break;
            default: printf("Opção inválida.\n");
        }
    } while(op != 4);

    return 0;
}
